###############################################################################
#                                                                             #
#                                                                             #
#             WEEWX TEST CONFIGURATION FILE                                   #
#                                                                             #
#                                                                             #
###############################################################################
#                                                                             #
#    Copyright (c) 2009, 2010, 2011 Tom Keffer <tkeffer@gmail.com>            #
#                                                                             #
#    See the file LICENSE.txt for your full rights.                           #
#                                                                             #
###############################################################################

#
# This section is for general configuration information
#

# Set to 1 for extra debug info, otherwise comment it out or set to zero.
debug = 1

# Root directory of the weewx data file hierarchy for this station.
WEEWX_ROOT = /var/tmp/weewx_test
    
# How long to wait before timing out a socket (FTP, HTTP) connection:
socket_timeout = 20

# Current version
version = test

############################################################################################

[Station]
    
    #
    # This section is for information about your station
    #
    
    location = "Ĺōćāţĩőń with UTF8 characters"
    
    # Latitude, longitude in decimal degrees
    latitude  =   45.686
    longitude = -121.566
    
    # Altitude of the station, with unit it is in:
    altitude = 100, meter	# Choose 'foot' or 'meter' for unit

    rain_year_start = 1

    # Start of week (0=Monday, 6 = Sunday)    
    week_start = 6
    
    # Set to type of station hardware (e.g., 'Vantage').
    # Must match a section name below.
    station_type = WeatherFlowUDP
    
##############################################################################

[WeatherFlowUDP]
    driver = user.weatherflowudp
    token = aToken
    devices = aDevice
    request_timeout = 30
    udp_address = <broadcast>
    # udp_address = 0.0.0.0
    # udp_address = 255.255.255.255
    udp_port = 50222
    udp_timeout = 90
    share_socket = False
    generateRainRate = True

    [[sensor_map]]
        outTemp = air_temperature.aDevice.obs_st
        outHumidity = relative_humidity.aDevice.obs_st
        pressure = station_pressure.aDevice.obs_st
        lightning_event_distance = distance.aDevice.evt_strike
        lightning_event_count = date_time.aDevice.evt_strike
        lightning_event_energy = energy.aDevice.evt_strike
        lightning_strike_count = lightning_strike_count.aDevice.obs_st
        lightning_distance = lightning_strike_avg_distance.aDevice.obs_st
        windSpeed = wind_avg.aDevice.obs_st
        windDir = wind_direction.aDevice.obs_st
        windGust = wind_gust.aDevice.obs_st
        windLull = wind_lull.aDevice.obs_st
        luminosity = illuminance.aDevice.obs_st
        UV = uv.aDevice.obs_st
        rain = rain_accumulated.aDevice.obs_st
        radiation = solar_radiation.aDevice.obs_st
        rapidWindDir = wind_direction.aDevice.rapid_wind
        rapidWindSpeed = wind_speed.aDevice.rapid_wind
        supplyVoltage = battery.aDevice.obs_st

##############################################################################
#   This section controls the origin of derived values.

[StdWXCalculate]

    [[Calculations]]
        # How to calculate derived quantities.  Possible values are:
        #  hardware        - use the value provided by hardware
        #  software        - use the value calculated by weewx
        #  prefer_hardware - use value provide by hardware if available,
        #                      otherwise use value calculated by weewx

        pressure = prefer_hardware
        altimeter = prefer_hardware
        appTemp = prefer_hardware
        barometer = prefer_hardware
        cloudbase = prefer_hardware
        dewpoint = prefer_hardware
        ET = prefer_hardware
        heatindex = prefer_hardware
        humidex = prefer_hardware
        inDewpoint = prefer_hardware
        maxSolarRad = prefer_hardware
        rainRate = prefer_hardware
        windchill = prefer_hardware
        windrun = prefer_hardware

############################################################################################

[StdArchive]
    
    # If the station hardware supports data logging then the archive interval
    # will be downloaded from the station. Otherwise, specify it (in seconds).
    archive_interval = 300
    
    # If possible, new archive records are downloaded from the station
    # hardware. If the hardware does not support this, then new archive
    # records will be generated in software.
    # Set the following to "software" to force software record generation.
    record_generation = software
    
    # Whether to include LOOP data in hi/low statistics
    loop_hilo = True
    
    # The data binding used to save archive records
    data_binding = wx_binding
    
    no_catchup = True
    
############################################################################################

[DataBindings]

    #
    # This section lists bindings. It's rather "non-standard", so as to be driven by
    # the test suites.
    #
    
    [[wx_binding]]
        # The database to be used - it should match one of the sections in [Databases] 
        database = archive_sqlite
        # The name of the table within the database
        table_name = archive
        # The class to manage the database
        manager = weewx.manager.DaySummaryManager
        # For the schema, use the "small" schema. It is much faster.
        schema = schemas.wview_small.schema

[Databases]

	#
	# This section lists possible databases. 
	#
	
	[[archive_sqlite]]
        root = /var/tmp/weewx_test
		database_name = test.sdb
		driver = weedb.sqlite
		
	# MySQL databases require setting an appropriate 'user' and 'password'
	[[archive_mysql]]
		host = localhost
		user = weewx1
		password = weewx1
		database_name = test_weewx
		driver = weedb.mysql

    [[alt_sqlite]]
        root = /var/tmp/weewx_test
        database_name = test_alt.sdb
        driver = weedb.sqlite
        
    # MySQL databases require setting an appropriate 'user' and 'password'
    [[alt_mysql]]
        host = localhost
        user = weewx1
        password = weewx1
        database_name = test_alt_weewx
        driver = weedb.mysql

############################################################################################

[StdReport]

    #
    # This section specifies what reports, using which skins, are to be generated.
    #

    # Where the skins reside, relative to WEEWX_ROOT:
    # (this will get overridden by the test software):
    SKIN_ROOT = test_skins
    
    # Where the generated reports should go, relative to WEEWX_ROOT:
    HTML_ROOT = test_results
    
    data_binding = wx_binding

    # Run a "standard test" (using US units)
    [[StandardTest]]
        HTML_ROOT = test_results/StandardTest
    
        # What skin this report should be based on:
        skin = StandardTest

        # Test adding a file by using an override. Because the skin configuration
        # file uses the deprecated 'FileGenerator', we must too.
        [[[FileGenerator]]]
            [[[[ByRecords]]]]
                #
                # Reports that include every record
                #
                [[[[[by_record]]]]]
                    encoding = strict_ascii
                    template = byrecord.txt.tmpl

	# Run it again, this time using metric units:
	[[MetricTest]]
		HTML_ROOT = test_results/StandardTest/metric
		skin = StandardTest
		[[[Units]]]
          [[[[Groups]]]]
	        group_altitude     = meter
	        group_degree_day   = degree_C_day
        	group_pressure     = mbar
	        group_rain         = mm
	        group_rainrate     = mm_per_hour
	        group_speed        = km_per_hour
	        group_speed2       = km_per_hour2
	        group_temperature  = degree_C
        	
        # Test adding a file by using an override. Because the skin configuration
        # file uses the deprecated 'FileGenerator', we must too.
        [[[FileGenerator]]]
            [[[[ByRecords]]]]
                #
                # Reports that include every record
                #
                [[[[[by_record]]]]]
                    encoding = strict_ascii
                    template = byrecord.txt.tmpl

##############################################################################

#   Various default values used by observations

[Defaults]

    # The following section is for managing the selection and formatting of units.
    [[Units]]

        # The following section sets what unit to use for each unit group.
        # NB: The unit is always in the singular. I.e., 'mile_per_hour',
        # NOT 'miles_per_hour'
        [[[Groups]]]
            group_altitude     = foot                 # Options are 'foot' or 'meter'
            group_degree_day   = degree_F_day         # Options are 'degree_F_day' or 'degree_C_day'
            group_direction    = degree_compass
            group_moisture     = centibar
            group_percent      = percent
            group_pressure     = inHg                 # Options are 'inHg', 'mmHg', 'mbar', or 'hPa'
            group_radiation    = watt_per_meter_squared
            group_rain         = inch                 # Options are 'inch', 'cm', or 'mm'
            group_rainrate     = inch_per_hour        # Options are 'inch_per_hour', 'cm_per_hour', or 'mm_per_hour'
            group_speed        = mile_per_hour        # Options are 'mile_per_hour', 'km_per_hour', 'knot', or 'meter_per_second'
            group_speed2       = mile_per_hour2       # Options are 'mile_per_hour2', 'km_per_hour2', 'knot2', or 'meter_per_second2'
            group_temperature  = degree_F             # Options are 'degree_F' or 'degree_C'
            group_uv           = uv_index
            group_volt         = volt

            # The following are used internally and should not be changed:
            group_count        = count
            group_interval     = minute
            group_time         = unix_epoch
            group_elapsed      = second

##############################################################################

#   This service acts as a filter, converting the unit system coming from
#   the hardware to a unit system in the database.

[StdConvert]
   target_unit = METRICWX    # Options are 'US', 'METRICWX', or 'METRIC'


##############################################################################

#   This section can adjust data using calibration expressions.


[StdCalibrate]

    [[Corrections]]


##############################################################################

#   This section is for quality control checks. If units are not specified,
#   values must be in the units defined in the StdConvert section.

[StdQC]

    [[MinMax]]
        barometer = 26, 32.5, inHg
        pressure = 24, 34.5, inHg
        outTemp = -40, 120, degree_F
        inTemp = 10, 120, degree_F

[Engine]
    [[Services]]
        data_services = user.weatherflowudp.WeatherflowCloudDataService
        process_services = user.weatherflowudp.WeatherflowConvert, user.weatherflowudp.WeatherflowCalibrate, user.weatherflowudp.WeatherflowQC, weewx.wxservices.StdWXCalculate
        archive_services = user.test.test_weatherflow.TestArchive        

[WeatherflowCloudDataService]
    enhanced_readings = lightning_strike_count, lightning_distance, rain, rainRate
    request_timeout = 10
    
[Accumulator]
    [[lightning_event_count]]
        extractor = count
    [[lightning_strike_count]]
        extractor = sum
    [[lightning_distance]]
    	adder=add_lightning
    [[lightningPerTimestamp]]
        accumulator=json
    	adder=add_json
    	extractor=json_array
