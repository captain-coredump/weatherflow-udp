1.14 2023-01-03 by Jan-Jaap van der Geer, jjvdgeer@yahoo.com
* Fix a problem where requesting observations from a hub caused
  the WeatherFlow REST to return a 500-error, by skipping hubs
  and unknown devices when requesting observations for devices.


1.13 2021-02-22 by Jan-Jaap van der Geer, jjvdgeer@yahoo.com
* Do not use REST interface for LOOP data
* Handle not setting --devices when using --create-sensor-map
* Don't enforce archive_interval
* Cosmetic change to printing of the sensor-map under python2


1.12 2021-02-03 by Jan-Jaap van der Geer, jjvdgeer@yahoo.com
* Added support for fetching Archive records from the REST interface
* Made the sensor map optional, fetching the info from the REST interface
* Let the hardware name function return the actual type of devices
* Don't fill the log file with messages "Unknown packet type: 'light_debug'".


1.11 2020-07-16 by Tom Keffer, tkeffer@gmail.com
* Ported to Python 2 (as well as Python 3).
* Ported to WeeWX V3.x (as well as V4.x).
* Fixed an insecure approach to decoding packets.
* Made the driver a bit closer to the standard WeeWX style. In particular, you can now run it directly.
* Closed the socket port after use.
* More Pythonic style.


1.10 2020-05-09 by Arthur Emerson, vreihen@yahoo.com
* IMPORTANT!  This release is set up for WeeWX 4.x and Python 3.  If you want it to run on Python 2, swap the comments in bin/user/weatheflowudp.py on lines 200/201, 214/215, and 284/285.  (I'll get around to making the detection of Python version automatic in the next update.)
* Added official Tempest UDP support now that API has been officially published.
* Note that I have decided after a weekend's debate to deviate slightly from the published Tempest API doc's naming of the rain field. WeatherFlow changed it from the rain_accumulated used on the Sky to precip_accumulated on the Tempest.  I'm going to continue to use rain_accumulated for the Tempest obs_st packets, to hopefully save sensor_map-rewriting grief in the future as Air/Sky owners upgrade to the new Tempest hardware.


1.04  2019-11-24 by Arthur Emerson, vreihen@yahoo.com (unpublished pre-release field test Tempest driver shared by email)
* Applied patches submitted by WF Forum user vinceskahan for WeeWX 4.x and Python 3 support.
* Added place holders for the future WeatherFlow Tempest all-in-one sensor's new obs packet type, in anticipation of the API being published in the next few weeks.  Hopefully they didn't drift too far from the obs_air and obs_sky packet layouts!
* IMPORTANT!  This release is set up for WeeWX 4.x and Python 3.  If you want it to run on Python 2, swap the comments in bin/user/weatheflowudp.py on lines 200/201, 214/215, and 284/285.  (I'll get around to making the detection of Python version automatic in the next update.)


1.03  2018-07-02 by Arthur Emerson, vreihen@yahoo.com
* Added support to share the open UDP port with other local programs, and made it a configurable option via share_socket = True in weewx.conf.  Made it configurable in case there is a Python implementation that doesn't share the port nicely.  Thanks to Ross for making the suggestion and providing a few sample lines, and thanks to @MechEng70 for verifying that the shared socket code works on his computer with another app sharing the port.
* Additional error handling to detect bad/short UDP packets, and handle them more gracefully than a SyntaxError during the eval process.  If the eval fails, the received packet is now sent to syslog via logerr.  Thanks to WF Forum user pswired for catching this!


1.02  2018-03-11 by Arthur Emerson, vreihen@yahoo.com
* Added support for user-defined protocol extension packets.  Any JSON packet received where "type" starts with "X_" will have the current time stamped on it and its contents forwarded to weewx per the sensor_map definitions.  Why?  Because WeatherFlow does not make a snow depth sensor, and let's just say that I have an Arduino sketch open in another window that will ultimately make use of this.  Feel free to create your own home collection of evil IoT devices reporting back to weewx! :-)


1.01  2018-03-11 by Arthur Emerson, vreihen@yahoo.com
* Realized that I forgot to include support for device_status and hub_status packets.  (Thanks eric @ WF support forum for making me double-check my work!)  You can now map rssi signal strengths, device uptimes, and other values that only a geek would get excited about into a weewx field, based on a sensor_map entry.


1.00  2018-03-10 by Arthur Emerson, vreihen@yahoo.com
* Scrapped just about everything below and started over more or less from scratch.
* Multiple sensors and a sensor_map facility based on mwall's weewx-SDR syntax finally added.
* Did I mention that it is imperative that you edit your weewx.conf file and add the needed sensor_map definitions, or else weewx will collect/log NOTHING?  The readme file is worth a read.
* As far as I know, *every* sensor reading and item is passed up to weewx, with the exception of certain debugging packets that are not documented and being sent for WeatherFlow's developers to troubleshoot.
* Current as of the Hub firmware v35 protocol API documentation, tested against v37 with no identified issues.
* I have accomplished everything that I originally set out to develop, with the exception of extending the weewx database to store lightning data.  Thus, this has been committed as a true v1.00 and is labeled as the master branch.  Consider all older versions deprecated.


0.30  2017-12-03 by Arthur Emerson, vreihen@yahoo.com
* Cleaned up Sky support, based on published API clarifications.
* (Note that rainfall in each packet is total since last packet, not storm/daily total. weewx likes it this way :-) and no need to delta.)
* Still does NOT look at Air/Sky device serial numbers, so it blindly reports ANY obs_air and obs_sky packets.
* Note that this 0.30 code has been running continuously on my Raspberry Pi for over a month in a test weewx instance with no problems/crashes observed.


0.10  2017-09-05 by Arthur Emerson, vreihen@yahoo.com
* Initial release
* Does NOT look at Air serial number, so it will blindly report ANY obs_air packet from any associated Air sensor arrays.
* Sky packets are developed from API documentation, not tested.  Unsure if rainfall is mm, or cumulative vs. observation period.

API documentation link from WeatherFlow:
https://weatherflow.github.io/SmartWeather/api/udp.html

